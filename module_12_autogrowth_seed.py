import os
import datetime
import random

def create_new_module():
    # Δημιουργία μοναδικού ονόματος αρχείου
    module_number = find_next_module_number()
    filename = f"module_{module_number}_autogenerated.py"

    # Δημιουργία περιεχομένου module
    content = f'''"""
Αυτό είναι το module {module_number}, δημιουργημένο αυτόματα για αρμονική ανάπτυξη.
"""

def module_{module_number}_function():
    print("Αυτό είναι το module {module_number}, μέρος του Harmonic Growth System.")

if __name__ == "__main__":
    module_{module_number}_function()
'''

    # Αποθήκευση αρχείου
    with open(filename, "w", encoding="utf-8") as f:
        f.write(content)
    
    print(f"Το αρχείο {filename} δημιουργήθηκε με επιτυχία!")

    # Καταγραφή στο growth log
    log_growth(filename)

def find_next_module_number():
    existing = [f for f in os.listdir() if f.startswith("module_") and f.endswith(".py")]
    numbers = []
    for f in existing:
        try:
            parts = f.split("_")
            number = int(parts[1])
            numbers.append(number)
        except:
            continue
    return max(numbers, default=12) + 1

def log_growth(module_name):
    log_dir = "logs"
    log_path = os.path.join(log_dir, "harmonic_growth_log.json")
    os.makedirs(log_dir, exist_ok=True)

    entry = {
        "module": module_name,
        "timestamp": datetime.datetime.now().isoformat(),
        "seed_value": random.randint(1000, 9999)
    }

    data = []
    if os.path.exists(log_path):
        with open(log_path, "r", encoding="utf-8") as f:
            try:
                import json
                data = json.load(f)
            except:
                data = []

    data.append(entry)

    with open(log_path, "w", encoding="utf-8") as f:
        import json
        json.dump(data, f, ensure_ascii=False, indent=2)

if __name__ == "__main__":
    create_new_module()
